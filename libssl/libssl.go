/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: openssl.i

package libssl

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef void* swig_type_1;
typedef void* swig_type_2;
typedef _goslice_ swig_type_3;
typedef _goslice_ swig_type_4;
typedef void* swig_type_5;
typedef void* swig_type_6;
typedef void* swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _goslice_ swig_type_15;
typedef _goslice_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef void* swig_type_18;
typedef long long swig_type_19;
typedef _goslice_ swig_type_20;
typedef _goslice_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef long long swig_type_23;
typedef _goslice_ swig_type_24;
typedef _goslice_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef long long swig_type_27;
typedef _gostring_ swig_type_28;
typedef long long swig_type_29;
typedef long long swig_type_30;
typedef long long swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef long long swig_type_34;
typedef long long swig_type_35;
typedef long long swig_type_36;
typedef _goslice_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef void* swig_type_39;
typedef void* swig_type_40;
typedef long long swig_type_41;
typedef long long swig_type_42;
typedef long long swig_type_43;
typedef _gostring_ swig_type_44;
typedef long long swig_type_45;
extern void _wrap_Swig_free_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_libssl_cc5c18f307e68e7f(swig_intgo arg1);
extern void _wrap_SSL_CTX_free_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_set_fd_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SSL_shutdown_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_SSL_free_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_accept_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_connect_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_type_1 _wrap_custom_ssl_verify_cb_libssl_cc5c18f307e68e7f(void);
extern void _wrap_SSL_set_verify_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2, swig_type_2 arg3);
extern swig_intgo _wrap_SSL_write_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_3 arg2);
extern swig_intgo _wrap_SSL_do_handshake_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_read_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_4 arg2);
extern swig_type_5 _wrap_custom_ssl_psk_client_cb_func_libssl_cc5c18f307e68e7f(void);
extern void _wrap_SSL_CTX_set_psk_client_callback_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_6 arg2);
extern void _wrap_SSL_set_psk_client_callback_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_7 arg2);
extern uintptr_t _wrap_SSL_CTX_get0_certificate_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_SSL_CTX_get0_privatekey_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_SSL_set_connect_state_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_SSL_set_accept_state_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_get_error_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_SSL_new_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_SSL_set_bio_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_SSL_CTX_new_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_TLS_method_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_TLS_server_method_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_TLS_client_method_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_DTLS_method_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_DTLS_server_method_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_DTLS_client_method_libssl_cc5c18f307e68e7f(void);
extern swig_intgo _wrap_SSL_CTX_use_certificate_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_SSL_use_certificate_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_SSL_use_certificate_file_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_8 arg2, swig_intgo arg3);
extern swig_intgo _wrap_SSL_CTX_use_certificate_chain_file_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_9 arg2);
extern swig_intgo _wrap_SSL_use_certificate_chain_file_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_10 arg2);
extern swig_intgo _wrap_SSL_CTX_use_PrivateKey_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_SSL_CTX_use_PrivateKey_file_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_11 arg2, swig_intgo arg3);
extern swig_intgo _wrap_SSL_use_PrivateKey_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_SSL_set_tlsext_host_name_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_12 arg2);
extern swig_intgo _wrap_SSL_CTX_load_verify_locations_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_13 arg2, swig_type_14 arg3);
extern swig_intgo _wrap_SSL_CTX_set_default_verify_paths_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_want_read_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_want_write_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_SSL_CTX_set_alpn_protos_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_15 arg2);
extern swig_intgo _wrap_SSL_set_alpn_protos_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_16 arg2);
extern swig_type_17 _wrap_SSL_get_alpn_selected_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_SSL_CTX_get_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SSL_CTX_set_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_SSL_get_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SSL_set_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_ERR_print_errors_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_SSL_CTX_set_verify_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2, swig_type_18 arg3);
extern swig_intgo _wrap_SSL_get_ex_data_X509_STORE_CTX_idx_libssl_cc5c18f307e68e7f(void);
extern void _wrap_SSL_CTX_set_verify_depth_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SSL_set_verify_depth_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_SSL_get_peer_certificate_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_SSL_CTX_get_cert_store_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_type_19 _wrap_SSL_get_verify_result_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_SSL_CTX_set_options_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SSL_set_options_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BIO_f_base64_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_f_buffer_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_f_cipher_libssl_cc5c18f307e68e7f(void);
extern swig_intgo _wrap_BIO_set_cipher_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2, swig_type_20 arg3, swig_type_21 arg4, swig_intgo arg5);
extern uintptr_t _wrap_BIO_f_md_libssl_cc5c18f307e68e7f(void);
extern swig_intgo _wrap_BIO_set_md_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BIO_f_null_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_f_ssl_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_get_ssl_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_BIO_new_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_free_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_BIO_free_all_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_BIO_push_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_BIO_new_ssl_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_BIO_new_ssl_connect_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_BIO_ssl_shutdown_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_BIO_s_accept_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_new_accept_libssl_cc5c18f307e68e7f(swig_type_22 arg1);
extern swig_intgo _wrap_BIO_do_accept_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_type_23 _wrap_BIO_do_handshake_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_write_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_24 arg2);
extern swig_intgo _wrap_BIO_read_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_25 arg2);
extern uintptr_t _wrap_BIO_s_bio_libssl_cc5c18f307e68e7f(void);
extern swig_intgo _wrap_BIO_make_bio_pair_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_bio_pair_bio1_set_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_bio_pair_bio1_get_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern void _wrap_bio_pair_bio2_set_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_bio_pair_bio2_get_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_new_bio_pair_libssl_cc5c18f307e68e7f(void);
extern void _wrap_delete_bio_pair_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_BIO_new_bio_pair_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_s_connect_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_new_connect_libssl_cc5c18f307e68e7f(swig_type_26 arg1);
extern swig_type_27 _wrap_BIO_set_conn_hostname_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_28 arg2);
extern swig_type_29 _wrap_BIO_set_nbio_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_30 arg2);
extern swig_type_31 _wrap_BIO_do_connect_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_BIO_s_fd_libssl_cc5c18f307e68e7f(void);
extern swig_intgo _wrap_BIO_set_fd_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_BIO_new_fd_libssl_cc5c18f307e68e7f(swig_intgo arg1, swig_intgo arg2);
extern uintptr_t _wrap_BIO_new_file_libssl_cc5c18f307e68e7f(swig_type_32 arg1, swig_type_33 arg2);
extern uintptr_t _wrap_BIO_s_mem_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_s_null_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_s_socket_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_BIO_new_socket_libssl_cc5c18f307e68e7f(swig_intgo arg1, swig_intgo arg2);
extern swig_intgo _wrap_BIO_should_read_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_should_write_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_should_retry_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_reset_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_seek_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_BIO_tell_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_flush_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_eof_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_BIO_set_close_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_34 arg2);
extern swig_intgo _wrap_BIO_pending_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_type_35 _wrap_BIO_ctrl_pending_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_type_36 _wrap_BIO_ctrl_wpending_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_BIO_get_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_BIO_set_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_intgo _wrap_BIO_gets_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_37 arg2);
extern swig_intgo _wrap_BIO_puts_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_type_38 arg2);
extern uintptr_t _wrap_PEM_read_bio_PrivateKey_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2, swig_type_39 arg3, uintptr_t arg4);
extern uintptr_t _wrap_PEM_read_bio_X509_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2, swig_type_40 arg3, uintptr_t arg4);
extern swig_intgo _wrap_X509_STORE_add_cert_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_SSL_get_ex_new_index_libssl_cc5c18f307e68e7f(swig_type_41 arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern swig_intgo _wrap_SSL_CTX_get_ex_new_index_libssl_cc5c18f307e68e7f(swig_type_42 arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern swig_intgo _wrap_BIO_get_ex_new_index_libssl_cc5c18f307e68e7f(swig_type_43 arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_X509_STORE_CTX_get_ex_data_libssl_cc5c18f307e68e7f(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_X509_NAME_print_libssl_cc5c18f307e68e7f(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_X509_get_subject_name_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_X509_get_issuer_name_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_type_44 _wrap_X509_verify_cert_error_string_libssl_cc5c18f307e68e7f(swig_type_45 arg1);
extern swig_intgo _wrap_X509_STORE_CTX_get_error_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern uintptr_t _wrap_EVP_sha256_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_sha512_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_sha1_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_md5_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_aes_128_cbc_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_aes_256_cbc_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_aes_128_cfb_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_aes_256_cfb_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_aes_128_gcm_libssl_cc5c18f307e68e7f(void);
extern uintptr_t _wrap_EVP_aes_256_gcm_libssl_cc5c18f307e68e7f(void);
extern swig_intgo _wrap_EVP_CIPHER_key_length_libssl_cc5c18f307e68e7f(uintptr_t arg1);
extern swig_intgo _wrap_EVP_CIPHER_iv_length_libssl_cc5c18f307e68e7f(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_libssl_cc5c18f307e68e7f(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func SSL_CTX_free(arg1 SSL_CTX) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SSL_CTX_free_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func SSL_set_fd(arg1 SSL, arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_set_fd_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func SSL_shutdown(arg1 SSL) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_shutdown_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_free(arg1 SSL) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SSL_free_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func SSL_accept(arg1 SSL) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_accept_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_connect(arg1 SSL) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_connect_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func _swig_getcustom_ssl_verify_cb() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	swig_r = (_swig_fnptr)(C._wrap_custom_ssl_verify_cb_libssl_cc5c18f307e68e7f())
	return swig_r
}

var Custom_ssl_verify_cb _swig_fnptr = _swig_getcustom_ssl_verify_cb()
func SSL_set_verify(arg1 SSL, arg2 int, arg3 _swig_fnptr) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SSL_set_verify_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_2(_swig_i_2))
}

func SSL_write(arg1 SSL, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_write_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_do_handshake(arg1 SSL) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_do_handshake_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_read(arg1 SSL, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_read_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func _swig_getcustom_ssl_psk_client_cb_func() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	swig_r = (_swig_fnptr)(C._wrap_custom_ssl_psk_client_cb_func_libssl_cc5c18f307e68e7f())
	return swig_r
}

var Custom_ssl_psk_client_cb_func _swig_fnptr = _swig_getcustom_ssl_psk_client_cb_func()
func SSL_CTX_set_psk_client_callback(arg1 SSL_CTX, arg2 _swig_fnptr) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SSL_CTX_set_psk_client_callback_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_type_6(_swig_i_1))
}

func SSL_set_psk_client_callback(arg1 SSL, arg2 _swig_fnptr) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SSL_set_psk_client_callback_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_type_7(_swig_i_1))
}

func SSL_CTX_get0_certificate(arg1 SSL_CTX) (_swig_ret X509) {
	var swig_r X509
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (X509)(SwigcptrX509(C._wrap_SSL_CTX_get0_certificate_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func SSL_CTX_get0_privatekey(arg1 SSL_CTX) (_swig_ret EVP_PKEY) {
	var swig_r EVP_PKEY
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (EVP_PKEY)(SwigcptrEVP_PKEY(C._wrap_SSL_CTX_get0_privatekey_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

const SSL_VERIFY_NONE int = 0x00
const SSL_VERIFY_PEER int = 0x01
const SSL_VERIFY_FAIL_IF_NO_PEER_CERT int = 0x02
const SSL_VERIFY_CLIENT_ONCE int = 0x04
const SSL_VERIFY_POST_HANDSHAKE int = 0x08
func SSL_set_connect_state(arg1 SSL) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SSL_set_connect_state_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func SSL_set_accept_state(arg1 SSL) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SSL_set_accept_state_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func SSL_get_error(arg1 SSL, arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_get_error_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func SSL_new(arg1 SSL_CTX) (_swig_ret SSL) {
	var swig_r SSL
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (SSL)(SwigcptrSSL(C._wrap_SSL_new_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func SSL_set_bio(arg1 SSL, arg2 BIO, arg3 BIO) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_SSL_set_bio_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func SSL_CTX_new(arg1 SSL_METHOD) (_swig_ret SSL_CTX) {
	var swig_r SSL_CTX
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (SSL_CTX)(SwigcptrSSL_CTX(C._wrap_SSL_CTX_new_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func TLS_method() (_swig_ret SSL_METHOD) {
	var swig_r SSL_METHOD
	swig_r = (SSL_METHOD)(SwigcptrSSL_METHOD(C._wrap_TLS_method_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func TLS_server_method() (_swig_ret SSL_METHOD) {
	var swig_r SSL_METHOD
	swig_r = (SSL_METHOD)(SwigcptrSSL_METHOD(C._wrap_TLS_server_method_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func TLS_client_method() (_swig_ret SSL_METHOD) {
	var swig_r SSL_METHOD
	swig_r = (SSL_METHOD)(SwigcptrSSL_METHOD(C._wrap_TLS_client_method_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func DTLS_method() (_swig_ret SSL_METHOD) {
	var swig_r SSL_METHOD
	swig_r = (SSL_METHOD)(SwigcptrSSL_METHOD(C._wrap_DTLS_method_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func DTLS_server_method() (_swig_ret SSL_METHOD) {
	var swig_r SSL_METHOD
	swig_r = (SSL_METHOD)(SwigcptrSSL_METHOD(C._wrap_DTLS_server_method_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func DTLS_client_method() (_swig_ret SSL_METHOD) {
	var swig_r SSL_METHOD
	swig_r = (SSL_METHOD)(SwigcptrSSL_METHOD(C._wrap_DTLS_client_method_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func SSL_CTX_use_certificate(arg1 SSL_CTX, arg2 X509) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_SSL_CTX_use_certificate_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func SSL_use_certificate(arg1 SSL, arg2 X509) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_SSL_use_certificate_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func SSL_use_certificate_file(arg1 SSL, arg2 string, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SSL_use_certificate_file_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_CTX_use_certificate_chain_file(arg1 SSL_CTX, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_CTX_use_certificate_chain_file_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_use_certificate_chain_file(arg1 SSL, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_use_certificate_chain_file_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_CTX_use_PrivateKey(arg1 SSL_CTX, arg2 EVP_PKEY) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_SSL_CTX_use_PrivateKey_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func SSL_CTX_use_PrivateKey_file(arg1 SSL_CTX, arg2 string, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SSL_CTX_use_PrivateKey_file_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_use_PrivateKey(arg1 SSL, arg2 EVP_PKEY) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_SSL_use_PrivateKey_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func SSL_set_tlsext_host_name(arg1 SSL, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_set_tlsext_host_name_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_CTX_load_verify_locations(arg1 SSL_CTX, arg2 string, arg3 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SSL_CTX_load_verify_locations_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func SSL_CTX_set_default_verify_paths(arg1 SSL_CTX) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_CTX_set_default_verify_paths_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_want_read(arg1 SSL) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_want_read_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_want_write(arg1 SSL) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_SSL_want_write_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_CTX_set_alpn_protos(arg1 SSL_CTX, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_CTX_set_alpn_protos_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_set_alpn_protos(arg1 SSL, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SSL_set_alpn_protos_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_16)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SSL_get_alpn_selected(arg1 SSL) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_SSL_get_alpn_selected_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func SSL_CTX_get_ex_data(arg1 SSL_CTX, arg2 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (uintptr)(C._wrap_SSL_CTX_get_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func SSL_CTX_set_ex_data(arg1 SSL_CTX, arg2 int, arg3 uintptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SSL_CTX_set_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func SSL_get_ex_data(arg1 SSL, arg2 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (uintptr)(C._wrap_SSL_get_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func SSL_set_ex_data(arg1 SSL, arg2 int, arg3 uintptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SSL_set_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func ERR_print_errors(arg1 BIO) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_ERR_print_errors_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func SSL_CTX_set_verify(arg1 SSL_CTX, arg2 int, arg3 _swig_fnptr) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SSL_CTX_set_verify_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_type_18(_swig_i_2))
}

func SSL_get_ex_data_X509_STORE_CTX_idx() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SSL_get_ex_data_X509_STORE_CTX_idx_libssl_cc5c18f307e68e7f())
	return swig_r
}

func SSL_CTX_set_verify_depth(arg1 SSL_CTX, arg2 int) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SSL_CTX_set_verify_depth_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SSL_set_verify_depth(arg1 SSL, arg2 int) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SSL_set_verify_depth_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SSL_get_peer_certificate(arg1 SSL) (_swig_ret X509) {
	var swig_r X509
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (X509)(SwigcptrX509(C._wrap_SSL_get_peer_certificate_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func SSL_CTX_get_cert_store(arg1 SSL_CTX) (_swig_ret X509_STORE) {
	var swig_r X509_STORE
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (X509_STORE)(SwigcptrX509_STORE(C._wrap_SSL_CTX_get_cert_store_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func SSL_get_verify_result(arg1 SSL) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int64)(C._wrap_SSL_get_verify_result_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SSL_CTX_set_options(arg1 SSL_CTX, arg2 Uint64_t) (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_SSL_CTX_set_options_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func SSL_set_options(arg1 SSL, arg2 Uint64_t) (_swig_ret Uint64_t) {
	var swig_r Uint64_t
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Uint64_t)(SwigcptrUint64_t(C._wrap_SSL_set_options_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

const SSL_OP_NO_SSLv3 uint = 0x02000000
const SSL_OP_NO_TLSv1 uint = 0x04000000
const SSL_OP_NO_TLSv1_2 uint = 0x08000000
const SSL_OP_NO_TLSv1_1 uint = 0x10000000
const SSL_OP_NO_TLSv1_3 uint = 0x20000000
const SSL_OP_NO_DTLSv1 uint = 0x04000000
const SSL_OP_NO_DTLSv1_2 uint = 0x08000000
const BIO_NOCLOSE int = 0x00
const BIO_CLOSE int = 0x01
func BIO_f_base64() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_f_base64_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_f_buffer() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_f_buffer_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_f_cipher() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_f_cipher_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_set_cipher(arg1 BIO, arg2 EVP_CIPHER, arg3 []byte, arg4 []byte, arg5 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_BIO_set_cipher_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_3)), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func BIO_f_md() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_f_md_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_set_md(arg1 BIO, arg2 EVP_MD) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_BIO_set_md_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func BIO_f_null() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_f_null_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_f_ssl() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_f_ssl_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_get_ssl(arg1 BIO) (_swig_ret SSL) {
	var swig_r SSL
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (SSL)(SwigcptrSSL(C._wrap_BIO_get_ssl_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func BIO_new(arg1 BIO_METHOD) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func BIO_free(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_free_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_free_all(arg1 BIO) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_BIO_free_all_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func BIO_push(arg1 BIO, arg2 BIO) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_push_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func BIO_new_ssl(arg1 SSL_CTX, arg2 int) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_ssl_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func BIO_new_ssl_connect(arg1 SSL_CTX) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_ssl_connect_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func BIO_ssl_shutdown(arg1 BIO) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_BIO_ssl_shutdown_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

func BIO_s_accept() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_accept_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_new_accept(arg1 string) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_accept_libssl_cc5c18f307e68e7f(*(*C.swig_type_22)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BIO_do_accept(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_do_accept_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_do_handshake(arg1 BIO) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int64)(C._wrap_BIO_do_handshake_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_write(arg1 BIO, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_BIO_write_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BIO_read(arg1 BIO, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_BIO_read_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BIO_s_bio() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_bio_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_make_bio_pair(arg1 BIO, arg2 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_BIO_make_bio_pair_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

type SwigcptrBio_pair uintptr

func (p SwigcptrBio_pair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBio_pair) SwigIsBio_pair() {
}

func (arg1 SwigcptrBio_pair) SetBio1(arg2 BIO) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_bio_pair_bio1_set_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBio_pair) GetBio1() (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	swig_r = (BIO)(SwigcptrBIO(C._wrap_bio_pair_bio1_get_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBio_pair) SetBio2(arg2 BIO) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_bio_pair_bio2_set_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrBio_pair) GetBio2() (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	swig_r = (BIO)(SwigcptrBIO(C._wrap_bio_pair_bio2_get_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewBio_pair() (_swig_ret Bio_pair) {
	var swig_r Bio_pair
	swig_r = (Bio_pair)(SwigcptrBio_pair(C._wrap_new_bio_pair_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func DeleteBio_pair(arg1 Bio_pair) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_bio_pair_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))
}

type Bio_pair interface {
	Swigcptr() uintptr
	SwigIsBio_pair()
	SetBio1(arg2 BIO)
	GetBio1() (_swig_ret BIO)
	SetBio2(arg2 BIO)
	GetBio2() (_swig_ret BIO)
}

func BIO_new_bio_pair() (_swig_ret Bio_pair) {
	var swig_r Bio_pair
	swig_r = (Bio_pair)(SwigcptrBio_pair(C._wrap_BIO_new_bio_pair_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_s_connect() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_connect_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_new_connect(arg1 string) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_connect_libssl_cc5c18f307e68e7f(*(*C.swig_type_26)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BIO_set_conn_hostname(arg1 BIO, arg2 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_BIO_set_conn_hostname_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_28)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BIO_set_nbio(arg1 BIO, arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_BIO_set_nbio_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_type_30(_swig_i_1)))
	return swig_r
}

func BIO_do_connect(arg1 BIO) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int64)(C._wrap_BIO_do_connect_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_s_fd() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_fd_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_set_fd(arg1 BIO, arg2 int, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_BIO_set_fd_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func BIO_new_fd(arg1 int, arg2 int) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_fd_libssl_cc5c18f307e68e7f(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func BIO_new_file(arg1 string, arg2 string) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_file_libssl_cc5c18f307e68e7f(*(*C.swig_type_32)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BIO_s_mem() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_mem_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_s_null() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_null_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_s_socket() (_swig_ret BIO_METHOD) {
	var swig_r BIO_METHOD
	swig_r = (BIO_METHOD)(SwigcptrBIO_METHOD(C._wrap_BIO_s_socket_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func BIO_new_socket(arg1 int, arg2 int) (_swig_ret BIO) {
	var swig_r BIO
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BIO)(SwigcptrBIO(C._wrap_BIO_new_socket_libssl_cc5c18f307e68e7f(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func BIO_should_read(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_should_read_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_should_write(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_should_write_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_should_retry(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_should_retry_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_reset(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_reset_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_seek(arg1 BIO, arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_BIO_seek_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func BIO_tell(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_tell_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_flush(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_flush_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_eof(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_eof_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_set_close(arg1 BIO, arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_BIO_set_close_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_type_34(_swig_i_1)))
	return swig_r
}

func BIO_pending(arg1 BIO) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_BIO_pending_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_ctrl_pending(arg1 BIO) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int64)(C._wrap_BIO_ctrl_pending_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_ctrl_wpending(arg1 BIO) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int64)(C._wrap_BIO_ctrl_wpending_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func BIO_get_ex_data(arg1 BIO, arg2 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (uintptr)(C._wrap_BIO_get_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func BIO_set_ex_data(arg1 BIO, arg2 int, arg3 uintptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_BIO_set_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func BIO_gets(arg1 BIO, arg2 []byte) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_BIO_gets_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BIO_puts(arg1 BIO, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_BIO_puts_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), *(*C.swig_type_38)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func PEM_read_bio_PrivateKey(arg1 BIO, arg2 EVP_PKEY, arg3 _swig_fnptr, arg4 uintptr) (_swig_ret EVP_PKEY) {
	var swig_r EVP_PKEY
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (EVP_PKEY)(SwigcptrEVP_PKEY(C._wrap_PEM_read_bio_PrivateKey_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_39(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func PEM_read_bio_X509(arg1 BIO, arg2 X509, arg3 _swig_fnptr, arg4 uintptr) (_swig_ret X509) {
	var swig_r X509
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (X509)(SwigcptrX509(C._wrap_PEM_read_bio_X509_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_40(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func X509_STORE_add_cert(arg1 X509_STORE, arg2 X509) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_X509_STORE_add_cert_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func SSL_get_ex_new_index(arg1 int64, arg2 uintptr, arg3 CRYPTO_EX_new, arg4 CRYPTO_EX_dup, arg5 CRYPTO_EX_free) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (int)(C._wrap_SSL_get_ex_new_index_libssl_cc5c18f307e68e7f(C.swig_type_41(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func SSL_CTX_get_ex_new_index(arg1 int64, arg2 uintptr, arg3 CRYPTO_EX_new, arg4 CRYPTO_EX_dup, arg5 CRYPTO_EX_free) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (int)(C._wrap_SSL_CTX_get_ex_new_index_libssl_cc5c18f307e68e7f(C.swig_type_42(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func BIO_get_ex_new_index(arg1 int64, arg2 uintptr, arg3 CRYPTO_EX_new, arg4 CRYPTO_EX_dup, arg5 CRYPTO_EX_free) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (int)(C._wrap_BIO_get_ex_new_index_libssl_cc5c18f307e68e7f(C.swig_type_43(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r
}

func X509_STORE_CTX_get_ex_data(arg1 X509_STORE_CTX, arg2 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (uintptr)(C._wrap_X509_STORE_CTX_get_ex_data_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func X509_NAME_print(arg1 BIO, arg2 X509_NAME, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_X509_NAME_print_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func X509_get_subject_name(arg1 X509) (_swig_ret X509_NAME) {
	var swig_r X509_NAME
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (X509_NAME)(SwigcptrX509_NAME(C._wrap_X509_get_subject_name_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func X509_get_issuer_name(arg1 X509) (_swig_ret X509_NAME) {
	var swig_r X509_NAME
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (X509_NAME)(SwigcptrX509_NAME(C._wrap_X509_get_issuer_name_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func X509_verify_cert_error_string(arg1 int64) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_X509_verify_cert_error_string_libssl_cc5c18f307e68e7f(C.swig_type_45(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func X509_STORE_CTX_get_error(arg1 X509_STORE_CTX) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_X509_STORE_CTX_get_error_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func EVP_sha256() (_swig_ret EVP_MD) {
	var swig_r EVP_MD
	swig_r = (EVP_MD)(SwigcptrEVP_MD(C._wrap_EVP_sha256_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_sha512() (_swig_ret EVP_MD) {
	var swig_r EVP_MD
	swig_r = (EVP_MD)(SwigcptrEVP_MD(C._wrap_EVP_sha512_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_sha1() (_swig_ret EVP_MD) {
	var swig_r EVP_MD
	swig_r = (EVP_MD)(SwigcptrEVP_MD(C._wrap_EVP_sha1_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_md5() (_swig_ret EVP_MD) {
	var swig_r EVP_MD
	swig_r = (EVP_MD)(SwigcptrEVP_MD(C._wrap_EVP_md5_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_aes_128_cbc() (_swig_ret EVP_CIPHER) {
	var swig_r EVP_CIPHER
	swig_r = (EVP_CIPHER)(SwigcptrEVP_CIPHER(C._wrap_EVP_aes_128_cbc_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_aes_256_cbc() (_swig_ret EVP_CIPHER) {
	var swig_r EVP_CIPHER
	swig_r = (EVP_CIPHER)(SwigcptrEVP_CIPHER(C._wrap_EVP_aes_256_cbc_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_aes_128_cfb() (_swig_ret EVP_CIPHER) {
	var swig_r EVP_CIPHER
	swig_r = (EVP_CIPHER)(SwigcptrEVP_CIPHER(C._wrap_EVP_aes_128_cfb_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_aes_256_cfb() (_swig_ret EVP_CIPHER) {
	var swig_r EVP_CIPHER
	swig_r = (EVP_CIPHER)(SwigcptrEVP_CIPHER(C._wrap_EVP_aes_256_cfb_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_aes_128_gcm() (_swig_ret EVP_CIPHER) {
	var swig_r EVP_CIPHER
	swig_r = (EVP_CIPHER)(SwigcptrEVP_CIPHER(C._wrap_EVP_aes_128_gcm_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_aes_256_gcm() (_swig_ret EVP_CIPHER) {
	var swig_r EVP_CIPHER
	swig_r = (EVP_CIPHER)(SwigcptrEVP_CIPHER(C._wrap_EVP_aes_256_gcm_libssl_cc5c18f307e68e7f()))
	return swig_r
}

func EVP_CIPHER_key_length(arg1 EVP_CIPHER) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_EVP_CIPHER_key_length_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func EVP_CIPHER_iv_length(arg1 EVP_CIPHER) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (int)(C._wrap_EVP_CIPHER_iv_length_libssl_cc5c18f307e68e7f(C.uintptr_t(_swig_i_0)))
	return swig_r
}


type SwigcptrEVP_MD uintptr
type EVP_MD interface {
	Swigcptr() uintptr;
}
func (p SwigcptrEVP_MD) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrX509_STORE_CTX uintptr
type X509_STORE_CTX interface {
	Swigcptr() uintptr;
}
func (p SwigcptrX509_STORE_CTX) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSSL uintptr
type SSL interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSSL) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUint64_t uintptr
type Uint64_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUint64_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBIO_METHOD uintptr
type BIO_METHOD interface {
	Swigcptr() uintptr;
}
func (p SwigcptrBIO_METHOD) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSSL_METHOD uintptr
type SSL_METHOD interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSSL_METHOD) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrEVP_PKEY uintptr
type EVP_PKEY interface {
	Swigcptr() uintptr;
}
func (p SwigcptrEVP_PKEY) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrCRYPTO_EX_new uintptr
type CRYPTO_EX_new interface {
	Swigcptr() uintptr;
}
func (p SwigcptrCRYPTO_EX_new) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrX509_STORE uintptr
type X509_STORE interface {
	Swigcptr() uintptr;
}
func (p SwigcptrX509_STORE) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBIO uintptr
type BIO interface {
	Swigcptr() uintptr;
}
func (p SwigcptrBIO) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrX509_NAME uintptr
type X509_NAME interface {
	Swigcptr() uintptr;
}
func (p SwigcptrX509_NAME) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrX509 uintptr
type X509 interface {
	Swigcptr() uintptr;
}
func (p SwigcptrX509) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrCRYPTO_EX_dup uintptr
type CRYPTO_EX_dup interface {
	Swigcptr() uintptr;
}
func (p SwigcptrCRYPTO_EX_dup) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrEVP_CIPHER uintptr
type EVP_CIPHER interface {
	Swigcptr() uintptr;
}
func (p SwigcptrEVP_CIPHER) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSSL_CTX uintptr
type SSL_CTX interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSSL_CTX) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrCRYPTO_EX_free uintptr
type CRYPTO_EX_free interface {
	Swigcptr() uintptr;
}
func (p SwigcptrCRYPTO_EX_free) Swigcptr() uintptr {
	return uintptr(p)
}

